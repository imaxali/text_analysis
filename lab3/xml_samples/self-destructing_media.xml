<?xml version='1.0' encoding='UTF-8'?>
<doc name="self-destructing_media.xml">
  <block>
    <block>Совсем недавно я увидел статью, где говорилось о внедрении самоуничтожающихся сообщений в мессенджере WhatsApp. Она будет иметь схожую с Telegram функциональность, но если в мессенджере Дурова удаление распространяется как на обычные сообщения (секретные чаты), также их можно использовать на фотках в обычных чатах. То есть после отправки предположим фотографии, собеседник сможет просмотреть ее ограниченное количество времени, а после, по идее, она будет удалена у обоих собеседников (желательно с сервера тоже), то в WhatsApp планируется внедрение удаления обычных сообщений(и сделано пока оно так себе).</block>
    <block>Но, сегодня речь пойдет не о WhatsApp (ибо я им вообще не пользуюсь), а о Telegram. Сама идея самоуничтожающихся сообщений вряд ли пользуется большим спросом, но и есть те пользователи, которые пользуются ими, например, при отправке документов или же фотографий, которые можно увидеть лишь раз (кхм).</block>
    <block>Для тех, кто ленится читать – самоуничтожающиеся сообщения в Telegram не безопасны и не конфиденциальны. Не думайте, что если вы таким способом отправите какому-нибудь собеседнику важный документ, он его не сможет сохранить (и я сейчас не про способ быстрого скриншота или же фотографий экранов телефона, боже упаси) – для этого используйте секретные чаты. А для тех кому интересна сама реализация этих сообщений, можете продолжить чтение.</block>
    <block>Пользовался и я ими, правда не часто и скорее это были просто «развлечение» и за ними я особо не наблюдал. В июне месяце этого года я исследуя UserAPI Telegram, тестировал отправку фотографий и их получение. Развлекался, не более. И интерес появился в просмотре «вида» отправки сообщений, и как вообще они отображаются в ответе. Мне стало интересно как реализована эта функция «изнутри», удаляются ли файлы с сервера Telegram или может они как-то шифруются.</block>
    <block>И на мое удивление, эти сообщения практически никак не отличаются от обычных. Прям совсем. У них присутствует такой же file_id как и обычных фотографий, с помощью которого, можно получить сам файл. И при этом даже если вы просмотрели сообщение, и оно исчезло в чате, вы спокойно можете его сохранить/отправить/переслать и сделать все то же самое, что вы могли сделать с обычными фотографиями/видео. То есть оно не удаляется с самого сервера Telegram.</block>
    <block>Повторюсь, такие сообщения не относятся к секретным чатам, где переписка находится на двух устройствах, и с другого клиента я не могу получить к ним доступ. Эта функция разработана для обычных чатов и вроде бы как считалась «безопасной». Но и тут интересно, я нигде не нашел подробное описание этих самых самоуничтожающихся сообщений. То есть Telegram как бы и не говорит нам, что эти сообщения такие безопасные в плане доступа (если у вас есть доступ к самому аккаунту) как например те же самые секретные чаты. Единственное, что я видел, так это то что сам Telegram говорил что никакие сообщения, даже секретные чаты не имеют 100 процентной безопасности и что каждый отвечает сам за сообщения которые он отправляет, но…</block>
    <block>Признаюсь, было бы это реализовано в каком нибудь WhatsApp/Viber/VK, я бы даже не обратил на это внимание, но Telegram является очень удобным мессенджером, который я сильно люблю, но вот что я ненавижу, так это его поддержка наполненная волонтерами.</block>
    <block>В том же июне месяце я написал на почту support@telegram.org, где я составил целое письмо на двух языках. Где говорилось не только про самоуничтожающиеся сообщения, но так и про обычные и что Telegram не ставит никаких лимитов на пересылку, но об этом позже.</block>
    <block>Спустя два месяца мне так и не ответили, поэтому пришлось писать в ту самую «поддержку» Telegram об разъяснении, что делать и куда писать при нахождении такого рода «Уязвимости».</block>
    <block>Там мне на удивление ответили спустя три часа, где рассказали, что писать о серьезных уязвимостях в протоколе необходимо на security@telegram.org или же поделиться подробностями «тут». Прикладываю оригинальный текст ответа от поддержки:</block>
  </block>
  <block>
    <block>Я решил написать в саму поддержку о «подробностях» уязвимостей, прикладывая видео, сам скрипт и варианты решения проблемы (ниже есть мое сообщение), но, до нынешнего момента мне так и не ответили, ни на почте, ни в самой поддержке. Видимо пока, это их не волнует. Лучше давайте сделаем анимацию одиночных эмодзи.</block>
    <block>Кроме варианта с самоуничтожающимися сообщениями, я так же заметил, что любое сообщение, которое было удалено, например, в личном чате, группе, канале, так же легко перехватить. Делается это при помощи обычного форварда всех сообщений, например, в отдельную группу, а после доставания их с помощью ID удаленного сообщения (сейчас библиотеки имеют хэндлеры на них).</block>
    <block>Я так же описывал весь процесс в своем письме (хотя на деле он прост), с вариантом решения проблемы в виде ограничения форвардов самих сообщений. И если не полностью ограничивать, то запретить постоянный форвард всех сообщений. Думаю, команда разработчиков сможет сделать некий антифлуд от форвардов.</block>
    <block>А с самоуничтожающимися – просто удалять их с сервера. Это не решит проблему, сообщения все так же можно будет перехватывать именно в момент их получения. Для полного устранения следует переработать весь алгоритм их прочтения. К примеру сделать ключ доступа к каждому сообщению и при использовании этого ключа, изображение/видео будет доступно только определенное время. Мне сложно сейчас придумать за команду разработчиков весь алгоритм, признаю, я сам не в состоянии продумать все аспекты и в любом случае, найдется способ их перехвата. Но в данный момент, они реализованы просто ужасно, разработчик(-и) которые занимались этой функцией должны более ответственно относиться к разработке такого рода функции. Ну или на крайний случай так и написать, прямо красными, жирными буквами, что самоуничтожающиеся сообщения легко перехватить и это не более чем игрушка.</block>
    <block>Расскажу о себе, 15 летний школьник, недавно увлекающийся разработкой на Python, баловался с User API и нашел такого рода «недоработку/уязвимость». Большее что взбесило и вынудило написать все это сюда – ужаснейшая реализация поддержки Telegram, которая просто меня проигнорировала три раза в течение 4 месяцев.</block>
    <block>Для кого-то эта функция не окажется полезной, он не найдет ничего страшного в плохой реализации таких сообщений, но думаю, раз сам Telegram не заинтересован в совершенствовании нынешних функций, будет полезно чтобы другие просто это приняли во внимание.</block>
  </block>
</doc>
